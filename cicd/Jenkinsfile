pipeline {
    agent any

    tools {
        maven 'Maven-3.8.1'  // Ensure this matches the tool name in Jenkins
        jdk 'OpenJDK-11'  // Ensure this matches the tool name in Jenkins
    }

    environment {
        AWS_REGION = 'us-east-1'
        IMAGE_ECR_REPO = '737465025187.dkr.ecr.us-east-1.amazonaws.com/jenkins-ci'
        ECR_REPO = '737465025187.dkr.ecr.us-east-1.amazonaws.com'
        BRANCH_NAME = 'main'
        GIT_CRED = 'new-Github-creds'
        GIT_PROJECT_URL = 'https://github.com/afiyog/pet-clinic-java.git'
        SONAQUBE_CRED = 'sonar-cred'
        SONAQUBE_INSTALLATION = 'sonar'
        APP_NAME = 'pet-clinic-java'
    }

    stages {
        stage('Git Checkout') {
            steps {
                git branch: BRANCH_NAME, 
                    credentialsId: GIT_CRED, 
                    url: GIT_PROJECT_URL
            }
        }

        stage('Code Scan') {
            steps {
                sh "trivy fs --format table -o maven_dependency.html ."
            }
        }

        stage('Unit Test') {
            steps {
                sh 'mvn clean compile'
            }
        }

        stage('SonarQube Scan') {
            steps {
                script {
                    def scannerHome = tool 'sonar-env' // Correct way to reference tool

                    withSonarQubeEnv(SONAQUBE_INSTALLATION) {
                        sh """
                            ${scannerHome}/bin/sonar-scanner \
                            -Dsonar.projectName=${APP_NAME} \
                            -Dsonar.projectKey=${APP_NAME} \
                            -Dsonar.java.binaries=.
                        """
                    }
                }
            }
        }
    }
}
